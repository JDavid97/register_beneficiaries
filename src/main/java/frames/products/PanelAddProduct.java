/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package frames.products;

import ayvdiningroom.DAOProductsImpl;
import interfaces.DAOProducts;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import models.Beneficiaries;
import models.Products;

/**
 *
 * @author judav
 */
public class PanelAddProduct extends javax.swing.JPanel {

    boolean isEdit = false; 
    Products productToEdit;
    
    public PanelAddProduct() {
        initComponents();
    }
    
    public PanelAddProduct(Products product) {
        initComponents();       
        productToEdit = product;
        editProduct(productToEdit);        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbSaveProduct = new javax.swing.JButton();
        jbClear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtName = new javax.swing.JTextField();
        jtInternalCode = new javax.swing.JTextField();
        jcbState = new javax.swing.JComboBox<>();
        jcbUniteOfMeasure = new javax.swing.JComboBox<>();
        jtPrice = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jbSaveProduct.setBackground(new java.awt.Color(102, 151, 255));
        jbSaveProduct.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbSaveProduct.setForeground(new java.awt.Color(255, 255, 255));
        jbSaveProduct.setText("Registrar");
        jbSaveProduct.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbSaveProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSaveProductActionPerformed(evt);
            }
        });

        jbClear.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jbClear.setText("Limpiar");
        jbClear.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jbClear.setContentAreaFilled(false);
        jbClear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbClearActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Nombre del producto:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Código:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Estado del producto:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Unidad de medida:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Precio:");

        jtName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jtInternalCode.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jcbState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Activo", "Inactivo" }));
        jcbState.setBorder(null);
        jcbState.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jcbState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbStateActionPerformed(evt);
            }
        });

        jcbUniteOfMeasure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Gramo", "Kilogramo", "Libra", "Unidad", "Litro", "Galón", "Bulto" }));

        jtPrice.setToolTipText("");
        jtPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtPriceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(308, 308, 308)
                        .addComponent(jbClear, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jbSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtPrice)
                            .addComponent(jtInternalCode)
                            .addComponent(jtName)
                            .addComponent(jcbState, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbUniteOfMeasure, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(216, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtName, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtInternalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbState, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbUniteOfMeasure, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbSaveProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbClear, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(101, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbSaveProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSaveProductActionPerformed
        String name, state, internalCoded, price, unitOfMeasure;

        name = jtName.getText();               
        state = (String) jcbState.getSelectedItem();
        internalCoded = jtInternalCode.getText();
        price = jtPrice.getText();
        unitOfMeasure = (String) jcbUniteOfMeasure.getSelectedItem();    

        if(name.isEmpty() || state.isEmpty() || internalCoded.isEmpty() || price.isEmpty() || unitOfMeasure.isEmpty()){
            javax.swing.JOptionPane.showMessageDialog(this, "Debe llenar todos los campos \n", "AVISO", JOptionPane.WARNING_MESSAGE);
            jtName.requestFocus();
            return;
        }

        if(!isEdit){
            try {
                Products product = new Products();

                product.setName(name);
                product.setState(state);
                product.setInternal_code(internalCoded);
                product.setPrice(Double.parseDouble(price));
                product.setUnit_of_measure(unitOfMeasure);     

                DAOProducts dao = new DAOProductsImpl();
                if(dao.insert(product)){
                    javax.swing.JOptionPane.showMessageDialog(null, product.getName()+" se registró correctamente. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);          
                    jtName.setText("");
                    jtInternalCode.setText("");                    
                    jcbState.setSelectedIndex(0);
                    jcbUniteOfMeasure.setSelectedIndex(0);
                    jtPrice.setText("");  

                    jtName.requestFocus();
                }

            }catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar el producto \n", "AVISO", JOptionPane.ERROR_MESSAGE);
                System.out.println(e.getMessage());
            }
        }else{
            try {
                productToEdit.setName(name);
                productToEdit.setState(state);
                productToEdit.setInternal_code(internalCoded);
                productToEdit.setPrice(Double.parseDouble(price));
                productToEdit.setUnit_of_measure(unitOfMeasure);   

                DAOProducts dao = new DAOProductsImpl();
                if(dao.modify(productToEdit)){
                    javax.swing.JOptionPane.showMessageDialog(null, productToEdit.getName()+" se editó correctamente. \n", "AVISO", JOptionPane.INFORMATION_MESSAGE);
                }

            }catch (Exception e) {
                javax.swing.JOptionPane.showMessageDialog(this, "Ocurrió un error al editar el beneficiario \n", "AVISO", JOptionPane.ERROR_MESSAGE);
                System.out.println(e.getMessage());
            }
        }

    }//GEN-LAST:event_jbSaveProductActionPerformed

    private void editProduct(Products productToEdit) {                                                 
        jtName.setText(productToEdit.getName());
        jtInternalCode.setText(productToEdit.getInternal_code());
        jtPrice.setText(Double.toString(productToEdit.getPrice()));        

        
        jbSaveProduct.setText("Guardar");
        
        isEdit = true;
        
        // Combobox        
        String state = productToEdit.getState();
        String unit_of_measure = productToEdit.getUnit_of_measure();

        // Obtiene el modelo del JComboBox
        DefaultComboBoxModel<String> modelState = (DefaultComboBoxModel<String>) jcbState.getModel();
        DefaultComboBoxModel<String> modelUnitOfMeasure = (DefaultComboBoxModel<String>) jcbUniteOfMeasure.getModel();

        // Busca el índice del tipo de documento en el modelo del JComboBox
        int indexModelState = -1;
        for (int i = 0; i < modelState.getSize(); i++) {
            if (state.equals(modelState.getElementAt(i))) {
                indexModelState = i;
                break;
            }
        }  
        
        int indexModelUnitOfMeasure = -1;
        for (int i = 0; i < modelUnitOfMeasure.getSize(); i++) {
            if (unit_of_measure.equals(modelUnitOfMeasure.getElementAt(i))) {
                indexModelUnitOfMeasure = i;
                break;
            }
        }        
        jcbState.setSelectedIndex(indexModelState); 
        jcbUniteOfMeasure.setSelectedIndex(indexModelUnitOfMeasure);                         
    } 
    
    private void jbClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbClearActionPerformed
        jtName.setText("");
        jtInternalCode.setText("");        
        jcbState.setSelectedIndex(0);
        jcbUniteOfMeasure.setSelectedIndex(0);        
        jtPrice.setText("");        
    }//GEN-LAST:event_jbClearActionPerformed

    private void jcbStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbStateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbStateActionPerformed

    private void jtPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtPriceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton jbClear;
    private javax.swing.JButton jbSaveProduct;
    private javax.swing.JComboBox<String> jcbState;
    private javax.swing.JComboBox<String> jcbUniteOfMeasure;
    private javax.swing.JTextField jtInternalCode;
    private javax.swing.JTextField jtName;
    private javax.swing.JTextField jtPrice;
    // End of variables declaration//GEN-END:variables
}
